function p = proj(A,b)
format compact,
A = shrink(A);
b = transpose(b);
if size(A, 1) == size(b, 2)
    if rank(A) == rank([A transpose(b)])
        p = b;
        disp(p)
        z = b - p;
        disp(z)
        disp('b is in the Col A')
        quit
    else
        R = colspace(sym(A));
        T = 0;
        for i = 1:size(R,2)
            T = T + dot(R(:,i),b);
        end
        if T == 0
            z = b;
            p = z - b;
            disp(p)
            disp(z)
            disp('b is orthogonal to Col A')
            quit
        else
            p = (A * ((transpose(A) * A) \ transpose(A)))*transpose(b);
            disp(p)
            z = b - transpose(p);
            D = dot(p, z);
            if abs(D) < 1E-7
                disp('Yes, p and z are orthogonal! Great Job!')
            else
                disp('Oops! Is there a bug in my code?')
            end
        end
    end
else
    disp('No solution: dimensions of A and b disagree')
    p = sym('empty_vector');
    return
end
 
function B = shrink(A)
format compact,
[~, pivot] = rref(A);
B = A(: , pivot);

function X = solvemore(A,b)
format long,
A = shrink(A);
[~,n] = size(A);
if rank(A) == rank([A b])
    disp('The equation is consistent--look for the exact solution')
    B = round(A' * A - eye(n));
    if B == zeros(size(B))
        if size(A,1) == size(A,2)
            x1 = A \ b;
            x2 = transpose(A)*b;
            N = norm(x1 - x2);
            disp('A is orthogonal')
            X = [ x1, x2 ];
            disp(X)
            disp('The norm of the difference between two solutions is N =')
            disp(N)
        else
            x1 = A \ b;
            disp('A has orthonormal columns but is not orthogonal')
            X = x1;
            disp(X)
        end
    else
        x1 = A \ b;
        disp('A does not have orthogonal columns')
        X = x1;
        disp(X)
    end
else
    disp('The system is inconsistent--look for the least-squares solution')
    x3 = inv(transpose(A)*A)*transpose(A)*b;
    n1 = norm(b - A * x3);
    disp('The solution of the normal equations is')
    disp(x3)
    disp('The least-squares error of the approximation is n1 = ')
    disp(n1)
    B = round(A' * A - eye(n));
    if B == zeros(size(B))
        disp('A has orthonormal columns: an orthonormal basis for Col A is U = A')
        U = A;
    else
        U = orth(A);
        disp('An orthonormal basis for Col A, U = ')
        disp(U)
        b1 = U*transpose(U)*b;
        disp('The projection of b onto Col A is')
        disp(b1)
        x3 = inv(transpose(A)*A)*transpose(A)*b;
        x4 = A \ (b1);
        disp('The least-squares solution by using the projection onto Col A is x4 =')
        disp(x4)
        n2 = norm(b - A * x4);
        disp('The least-squares error os this approximation is n2 = ')
        disp(n2)
        n3 = norm(x3 - x4);
        x = rand(n,1);
        n4 = norm(b - A*x);
        disp('An error of approximation of b by Ax for a random vector x in the real coordinate space is')
        disp(n4)
        X = [x3,x4];
    end
    end
function B = shrink(A)
format compact,
[~, pivot] = rref(A);
B = A(: , pivot);


